{"version":3,"sources":["components/Navbar.js","components/About.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","aboutText","onClick","toggleMode","htmlFor","About","useState","color","backgroundColor","myStyle","setMyStyle","btnText","setBtnText","style","defaultProps","TextForm","text","setText","heading","value","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","forEach","e","joinText","Array","reverse","join","letter","slice","inputText","document","getElementById","select","navigator","clipboard","writeText","length","trim","Alert","alert","role","word","lower","charAt","capitalize","message","App","setMode","setAlert","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.35a7d60c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              {`Enable ${props.mode === \"light\" ? \"dark\" : \"light\"} Mode`}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"about text here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  const [myStyle, setMyStyle] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\",\r\n  });\r\n\r\n  const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\r\n\r\n  const handleToggleClick = () => {\r\n    if (myStyle.color === \"black\") {\r\n      setMyStyle({ color: \"white\", backgroundColor: \"black\" });\r\n      setBtnText(\"Enable light mode\");\r\n    } else {\r\n      setMyStyle({ color: \"black\", backgroundColor: \"white\" });\r\n      setBtnText(\"Enable dark mode\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-3\" style={myStyle}>\r\n      <h2 className=\"mb-2\">About Us</h2>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              style={myStyle}\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              style={myStyle}\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <button className=\"btn btn-primary my-3\" onClick={handleToggleClick}>\r\n          {btnText}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpclick = () => {\r\n    console.log(\"Uppercase is clicked\", text);\r\n\r\n    let newText = text.toUpperCase();\r\n\r\n    setText(newText);\r\n\r\n    props.showAlert(\"Converted to uppercase\", \"success\");\r\n  };\r\n\r\n  const handleLoclick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\", \"success\");\r\n  };\r\n\r\n  const handleCapclick = () => {\r\n    let newText = \"\";\r\n    text.split(\" \").forEach(\r\n      (letter) => {\r\n        newText += `${letter[0].toUpperCase() + letter.slice(1)} `;\r\n        setText(newText);\r\n      }\r\n      // console.log(letter[0].toUpperCase() + letter.slice(1))\r\n    );\r\n    props.showAlert(\"Capitalised first letter\", \"success\");\r\n  };\r\n\r\n  const handleReverseclick = () => {\r\n    let newText = \"\";\r\n    text.split(\" \").forEach((e) => {\r\n      let textArr = new Array(...e);\r\n      //   console.log(textArr);\r\n      let reversedText = textArr.reverse();\r\n      //   console.log(reversedText);\r\n      let joinText = reversedText.join(\"\");\r\n      //   console.log(joinText);\r\n\r\n      newText += `${joinText} `;\r\n    });\r\n    setText(newText);\r\n    props.showAlert(\"Reversed the below text\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"On change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleClearclick = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Cleared the text\", \"warning\");\r\n  };\r\n\r\n  const handleCopyclick = () => {\r\n    const inputText = document.getElementById(\"textarea\");\r\n    inputText.select();\r\n    navigator.clipboard.writeText(inputText.value);\r\n    props.showAlert(\"Copied the text\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    const newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Removed the extra spaces\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"Enter text here\");\r\n\r\n  // console.log(props.mode);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"mb-3\"\r\n        style={{ color: `${props.mode === \"light\" ? \"black\" : \"white\"}` }}\r\n      >\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            className=\"form-control\"\r\n            id=\"textarea\"\r\n            rows=\"6\"\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"#464b4f\",\r\n              color: props.mode === \"light\" ? \"black\" : \"white\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpclick}>\r\n          Convert to uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoclick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleReverseclick}>\r\n          Reverse text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCapclick}>\r\n          Capitalize\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopyclick}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearclick}>\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: `${props.mode === \"light\" ? \"black\" : \"white\"}` }}\r\n      >\r\n        <h3>Summary</h3>\r\n        <p>\r\n          There are {text.length > 0 ? text.trim().split(\" \").length : 0} words\r\n          and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read.</p>\r\n\r\n        <h3>Preview</h3>\r\n        <div>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in the textbox to preview it here\"}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n        {/* <button\r\n          type=\"button\"\r\n          className=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button> */}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport About from \"./components/About\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({ message, type });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#464b4f\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      // setBtnText(\"Enable Light Mode\");\n      // settextColor({ color: \"black\" });\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"success\");\n    }\n  };\n\n  console.log(mode);\n\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About Us\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        {/* <Navbar /> */}\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter text to analyze\"\n                mode={mode}\n              />\n            </Route>\n          </Switch>\n          {/* <About /> */}\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}