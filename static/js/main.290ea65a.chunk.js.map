{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","defaultProps","TextForm","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","split","forEach","e","joinText","Array","reverse","join","letter","slice","inputText","document","getElementById","select","navigator","clipboard","writeText","length","trim","Alert","alert","role","word","lower","charAt","capitalize","message","App","setMode","setAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.290ea65a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              {`Enable ${props.mode === \"light\" ? \"dark\" : \"light\"} Mode`}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"about text here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpclick = () => {\r\n    console.log(\"Uppercase is clicked\", text);\r\n\r\n    let newText = text.toUpperCase();\r\n\r\n    setText(newText);\r\n\r\n    props.showAlert(\"Converted to uppercase\", \"success\");\r\n  };\r\n\r\n  const handleLoclick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\", \"success\");\r\n  };\r\n\r\n  const handleCapclick = () => {\r\n    let newText = \"\";\r\n    text.split(\" \").forEach(\r\n      (letter) => {\r\n        newText += `${letter[0].toUpperCase() + letter.slice(1)} `;\r\n        setText(newText);\r\n      }\r\n      // console.log(letter[0].toUpperCase() + letter.slice(1))\r\n    );\r\n    props.showAlert(\"Capitalised first letter\", \"success\");\r\n  };\r\n\r\n  const handleReverseclick = () => {\r\n    let newText = \"\";\r\n    text.split(\" \").forEach((e) => {\r\n      let textArr = new Array(...e);\r\n      //   console.log(textArr);\r\n      let reversedText = textArr.reverse();\r\n      //   console.log(reversedText);\r\n      let joinText = reversedText.join(\"\");\r\n      //   console.log(joinText);\r\n\r\n      newText += `${joinText} `;\r\n    });\r\n    setText(newText);\r\n    props.showAlert(\"Reversed the below text\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"On change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleClearclick = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Cleared the text\", \"warning\");\r\n  };\r\n\r\n  const handleCopyclick = () => {\r\n    const inputText = document.getElementById(\"textarea\");\r\n    inputText.select();\r\n    navigator.clipboard.writeText(inputText.value);\r\n    props.showAlert(\"Copied the text\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    const newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Removed the extra spaces\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"Enter text here\");\r\n\r\n  // console.log(props.mode);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"mb-3\"\r\n        style={{ color: `${props.mode === \"light\" ? \"black\" : \"white\"}` }}\r\n      >\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            className=\"form-control\"\r\n            id=\"textarea\"\r\n            rows=\"6\"\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"#464b4f\",\r\n              color: props.mode === \"light\" ? \"black\" : \"white\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpclick}>\r\n          Convert to uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoclick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleReverseclick}>\r\n          Reverse text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCapclick}>\r\n          Capitalize\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopyclick}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearclick}>\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: `${props.mode === \"light\" ? \"black\" : \"white\"}` }}\r\n      >\r\n        <h3>Summary</h3>\r\n        <p>\r\n          There are {text.length > 0 ? text.trim().split(\" \").length : 0} words\r\n          and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read.</p>\r\n\r\n        <h3>Preview</h3>\r\n        <div>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in the textbox to preview it here\"}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n        {/* <button\r\n          type=\"button\"\r\n          className=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button> */}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\n// import About from \"./components/About\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport React, { useState } from \"react\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({ message, type });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#464b4f\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      // setBtnText(\"Enable Light Mode\");\n      // settextColor({ color: \"black\" });\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"success\");\n    }\n  };\n\n  console.log(mode);\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About Us\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      {/* <Navbar /> */}\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n        {/* <Route exact path=\"/about\">\n              <About />\n            </Route> */}\n        {/* <Route exact path=\"/\"> */}\n        <TextForm\n          showAlert={showAlert}\n          heading=\"Enter text to analyze\"\n          mode={mode}\n        />\n        {/* </Route> */}\n        {/* </Switch> */}\n        {/* <About /> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}